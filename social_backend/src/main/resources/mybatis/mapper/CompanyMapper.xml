<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.CompanyMapper">

    <resultMap id="BaseResultMap" type="com.example.demo.entity.Company">
        <id column="company_id" jdbcType="INTEGER" property="companyId" />
        <result column="company_name" jdbcType="VARCHAR" property="companyName" />
        <result column="company_adress" jdbcType="VARCHAR" property="companyAdress" />
        <result column="company_website" jdbcType="VARCHAR" property="companyWebsite" />
        <result column="company_type" jdbcType="VARCHAR" property="companyType" />
        <result column="company_scale" jdbcType="INTEGER" property="companyScale" />
        <collection column="company_id" property="jobs" ofType="com.example.demo.entity.Job" >
            <id column="job_id" jdbcType="INTEGER" property="jobId" />
            <result column="job_name" jdbcType="VARCHAR" property="jobName" />
            <result column="job_type" jdbcType="VARCHAR" property="jobType" />
            <result column="job_education" jdbcType="VARCHAR" property="jobEducation" />
            <result column="job_num" jdbcType="INTEGER" property="jobNum" />
            <result column="job_salary" jdbcType="INTEGER" property="jobSalary" />
            <result column="job_adress" jdbcType="VARCHAR" property="jobAdress" />
            <result column="job_experience" jdbcType="VARCHAR" property="jobExperience" />
            <result column="job_welfare" jdbcType="VARCHAR" property="jobWelfare" />
            <result column="company_name" jdbcType="VARCHAR" property="companyName" />
        </collection>
    </resultMap>


    <sql id="Base_Column_List">
        company_id, company_name, company_adress, company_website, company_type, company_scale
    </sql>



    <select id="selectByCompanyId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        *
        from  company c,job j
        where c.company_id=j.company_id and c.company_id = #{companyId,jdbcType=INTEGER}
    </select>


    <sql id="findPageWithWhere">
        <where> 1=1
            <if test="companyId != null" >
                and company_id  #{companyId,jdbcType=INTEGER}
            </if>
            <if test="companyName != null and companyName != ''" >
                and company_name = #{companyName,jdbcType=VARCHAR}
            </if>
            <if test="companyAdress != null and companyAdress != ''" >
                and company_adress = #{companyAdress,jdbcType=VARCHAR}
            </if>
            <if test="companyWebsite != null and companyWebsite != ''" >
                and company_website = #{companyWebsite,jdbcType=VARCHAR}
            </if>
            <if test="companyType != null and companyType != ''" >
                and company_type = #{companyType,jdbcType=VARCHAR}
            </if>
            <if test="companyScale != null" >
                and company_scale = #{companyScale,jdbcType=INTEGER}
            </if>
        </where>
    </sql>


    <select id="findPageWithResult" parameterType="com.example.demo.dto.CompanyDTO" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from  company
        <include refid="findPageWithWhere" />
        limit #{start},#{pageSize}
    </select>


    <select id="findPageWithCount" parameterType="com.example.demo.dto.CompanyDTO" resultType="Integer">
        select count(1)
        from company
        <include refid="findPageWithWhere" />
    </select>

</mapper>